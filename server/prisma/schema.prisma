// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String
  password String
  workspaces UserWorkspace[]
  tasks UserTask[]
}

model Workspace {
  id Int @id @default(autoincrement())
  title String
  users UserWorkspace[]
  status Status[]
}

model Status {
  id Int @id @default(autoincrement())
  type String
  tasks Task[]
  workspaceId Int
  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
}

model Task {
  id Int @id @default(autoincrement())
  title String
  priority String
  todos Todo[]
  statusId Int
  users UserTask[]
  status Status @relation(fields: [statusId], references: [id], onDelete: Cascade)
} 

model Todo {
  id Int @id @default(autoincrement())
  content String
  completed Boolean
  taskId Int
  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
}

model UserWorkspace {
  userId Int
  workspaceId Int
  user User @relation(fields: [userId], references: [id])
  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  accessType String
  @@id([userId, workspaceId])
}

model UserTask {
  userId Int
  taskId Int
  user User @relation(fields: [userId], references: [id])
  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  @@id([userId, taskId])
}


